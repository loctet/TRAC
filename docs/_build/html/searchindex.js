Search.setIndex({"docnames": ["Extension", "FSMGraph", "Fbuilder", "Generate_examples", "Helpers", "Logger", "Main", "MessagesTemplates", "MiniTimer", "PathGenerator", "PatternChecker", "Plot_data", "Random_exec", "SafeVariableAssignment", "Settings", "The_Validator", "TransactionsGrinder", "TransitionProcessor", "VariableDeclarationConverter", "Visual_graph", "Z3Runner", "index", "modules"], "filenames": ["Extension.rst", "FSMGraph.rst", "Fbuilder.rst", "Generate_examples.rst", "Helpers.rst", "Logger.rst", "Main.rst", "MessagesTemplates.rst", "MiniTimer.rst", "PathGenerator.rst", "PatternChecker.rst", "Plot_data.rst", "Random_exec.rst", "SafeVariableAssignment.rst", "Settings.rst", "The_Validator.rst", "TransactionsGrinder.rst", "TransitionProcessor.rst", "VariableDeclarationConverter.rst", "Visual_graph.rst", "Z3Runner.rst", "index.rst", "modules.rst"], "titles": ["Extension module", "FSMGraph module", "Fbuilder module", "Generate_examples module", "Helpers module", "Logger module", "Main module", "MessagesTemplates module", "MiniTimer module", "PathGenerator module", "PatternChecker module", "Plot_data module", "Random_exec module", "SafeVariableAssignment module", "Settings module", "The_Validator module", "TransactionsGrinder module", "TransitionProcessor module", "VariableDeclarationConverter module", "Visual_graph module", "Z3Runner module", "Welcome to TRAC Documentation\u2019s documentation!", "&lt;no title&gt;"], "terms": {"exist_in_set": [0, 21, 22], "formula": [0, 2, 17], "set": [0, 4, 16, 18, 21, 22], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "check": [0, 1, 5, 6, 7, 9, 10, 16, 17, 18, 20], "exist": [0, 17], "an": [0, 1, 2, 3, 5, 10, 15, 16, 20, 21], "element": [0, 1, 3], "satisfi": [0, 9, 16], "given": [0, 1, 2, 3, 6, 9, 12, 17, 19], "us": [0, 3, 4, 7, 9, 10, 11, 13, 18, 19], "z3": [0, 2, 3, 5, 7, 9, 10, 13, 16, 17, 18, 20], "solver": [0, 3, 7, 13, 17, 18, 20], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 19, 20, 21], "condit": [0, 3, 7, 10, 17], "each": [0, 3, 4, 9, 12, 16], "i": [0, 1, 2, 3, 5, 9, 13, 18, 21], "test": [0, 3, 12, 21], "against": 0, "collect": [0, 21], "return": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20], "true": [0, 1, 2, 5, 10, 16, 17, 20], "least": 0, "one": [0, 3], "fals": [0, 2, 5, 7, 10, 16, 17, 18, 20], "otherwis": [0, 5, 10, 17, 20], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20], "bool": [0, 1, 2, 5, 10, 12, 16, 17, 18, 20], "forall_in_set": [0, 21, 22], "all": [0, 1, 9, 10, 12], "evalu": [0, 17], "everi": [0, 1], "generatefuntionsformula": [0, 21, 22], "gener": [0, 3, 6, 7, 9, 12, 16, 17, 19, 20], "python": [0, 4, 7, 9], "function": [0, 1, 2, 3, 4, 6, 7, 10, 19, 21], "definit": [0, 7, 12, 19], "store": [0, 3, 12], "global": [0, 7, 13, 21], "dictionari": [0, 7, 9, 10, 12, 15, 16, 17, 18], "turn": 0, "can": [0, 3, 21], "A": [0, 1, 3, 4, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20], "string": [0, 1, 2, 3, 7, 9, 10, 11, 13, 15, 16, 17, 18, 19], "contain": [0, 2, 3, 4, 5, 7, 10, 12, 13, 15, 16, 18, 19, 20], "code": [0, 2, 7, 9, 17], "str": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20], "is_in_set": [0, 21, 22], "valu": [0, 3, 7, 9, 18], "presenc": 0, "which": [0, 1, 3], "found": [0, 9, 10, 20], "replace_assert": [0, 21, 22], "assert": [0, 10], "pars": [0, 3, 15], "replac": [0, 10], "within": [0, 9], "appropri": 0, "call": [0, 9], "modifi": [0, 10], "version": [0, 21], "where": [0, 2, 3, 4, 9, 12, 19, 21], "have": [0, 3], "been": 0, "suitabl": 0, "class": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20], "data": [1, 3, 4, 7, 11, 12, 16, 17, 18], "log": [1, 5, 16, 17, 20], "time_out": [1, 5, 12, 16, 17], "0": [1, 12, 16, 17, 21], "base": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20], "minitim": [1, 5, 17, 21, 22], "repres": [1, 3, 4, 7, 9, 15, 19, 21], "finit": [1, 6, 9, 12, 16, 17, 19, 21], "state": [1, 3, 6, 9, 11, 12, 15, 16, 17, 19, 21], "machin": [1, 6, 9, 12, 16, 17, 19, 21], "fsm": [1, 3, 6, 9, 12, 16, 17, 19, 21], "direct": [1, 19], "graph": [1, 9, 19], "provid": [1, 2, 3, 7, 8, 10, 18, 20, 21], "analyz": [1, 20], "manipul": 1, "dict": [1, 7, 9, 10, 12, 15, 16, 17, 18], "includ": [1, 2, 11, 15, 17, 18, 19], "transit": [1, 2, 3, 5, 9, 12, 15, 16, 17, 19], "option": [1, 2, 15, 16, 18], "indic": [1, 3, 7, 18, 20], "enabl": [1, 5], "default": [1, 2], "int": [1, 3, 8, 12], "timeout": [1, 5, 12], "oper": 1, "second": [1, 13], "caller_check": [1, 22], "caller": 1, "introduc": 1, "ani": [1, 3, 4, 12, 21], "path": [1, 3, 4, 5, 6, 9, 12, 15, 16, 20, 21], "lead": [1, 21], "": [1, 4, 9], "callercheck": 1, "implement": [1, 17], "whether": [1, 17], "correctli": 1, "get_number_of_path": [1, 22], "target_st": 1, "calcul": [1, 8], "number": [1, 3, 12, 21], "from": [1, 2, 3, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20], "initi": [1, 3, 9, 18, 19, 21], "target": 1, "get_outgoing_transit": [1, 22], "retriev": 1, "outgo": [1, 17], "list": [1, 3, 4, 7, 9, 10, 11, 12, 13, 16, 17, 18], "is_in_a_path": [1, 22], "callerrol": 1, "determin": [1, 17], "specif": [1, 10, 15, 17, 20, 21], "role": [1, 3], "singl": [1, 9, 12, 15], "verifi": [1, 16, 21], "associ": [1, 3], "is_in_all_path": [1, 22], "printpathtrac": [1, 22], "construct": [1, 3, 15, 16], "represent": [1, 3, 6, 9, 15], "product": [1, 21, 22], "object": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 18, 20], "iter": [1, 21], "repeat": 1, "1": [1, 21], "cartesian": 1, "input": [1, 10, 11, 17], "equival": 1, "nest": 1, "loop": 1, "For": 1, "exampl": [1, 16], "b": 1, "same": 1, "x": [1, 11], "y": [1, 11], "leftmost": 1, "ar": [1, 9, 10, 12, 13, 21], "outermost": 1, "so": 1, "output": [1, 5, 9, 12, 15, 20], "tupl": [1, 3, 4, 10, 13, 15, 16, 17, 18], "cycl": 1, "manner": 1, "similar": 1, "odomet": 1, "rightmost": 1, "chang": 1, "To": 1, "comput": 1, "itself": 1, "specifi": [1, 3, 4, 6, 10, 16, 17, 21], "repetit": 1, "keyword": 1, "argument": [1, 3, 4, 6], "4": 1, "mean": 1, "ab": 1, "rang": 1, "3": 1, "2": 1, "build": [2, 16, 17], "model": [2, 5, 16, 17, 20, 21], "save": [2, 12], "them": [2, 3, 13, 15, 16], "file": [2, 3, 4, 5, 6, 9, 11, 12, 15, 16, 20], "static": [2, 7, 9, 10, 13, 18, 20], "build_z3_formulas_model_and_sav": [2, 22], "trgrinder": [2, 5], "file_nam": [2, 9, 16], "only_latest": 2, "process": [2, 3, 5, 6, 10, 12, 16, 17, 20, 22], "transactionsgrind": [2, 5, 21, 22], "instanc": [2, 5, 7, 16, 19], "name": [2, 3, 7, 9, 10, 13, 16, 17, 18], "If": [2, 10, 16], "onli": 2, "latest": 2, "save_infil": [2, 22], "str_code": 2, "randomtransitionsgener": [3, 21, 22], "num_test": 3, "directori": [3, 12], "num_stat": 3, "none": [3, 4, 5, 9], "num_act": 3, "num_var": 3, "max_branching_factor": 3, "num_particip": 3, "max_num_transit": 3, "step": [3, 21], "5": [3, 12], "num_example_for_each": 3, "random": 3, "defin": [3, 6, 12, 15], "configur": 3, "appendtowork": [3, 22], "work": [3, 4, 21], "number_elt": 3, "append": [3, 10, 17, 18, 22], "item": [3, 5], "parallel": [3, 4], "execut": [3, 4, 5, 9, 12, 16, 20], "merge_and_delet": [3, 12, 22], "merg": [3, 12], "individu": [3, 6, 12], "csv": [3, 4, 11, 12], "clean": [3, 12], "up": [3, 12, 21], "run": [3, 4, 12, 16, 20, 22], "run2": [3, 22], "altern": 3, "mode": 3, "genfil": [3, 21, 22], "subdir_num": 3, "max_test": 3, "generate_a_transit": [3, 21, 22], "state_vari": 3, "param": 3, "particip": [3, 15, 16, 17, 18, 21], "to_stat": [3, 9], "from_stat": [3, 9], "action": [3, 15, 17], "textual": [3, 15], "variabl": [3, 7, 10, 13, 15, 16, 17, 18], "involv": [3, 17, 21], "destin": 3, "occur": 3, "generate_act": [3, 21, 22], "max_act": 3, "uniqu": [3, 10], "maximum": 3, "actual": 3, "mai": [3, 21], "less": 3, "than": 3, "thi": [3, 4, 6, 8, 15, 18, 19, 20, 21], "exce": 3, "practic": [3, 21], "limit": [3, 12, 21], "generate_paramet": [3, 21, 22], "max_param": 3, "generate_random_type_vari": [3, 21, 22], "intend": 3, "randomli": [3, 12], "assign": [3, 7, 10, 13, 18, 21], "generate_secure_se": [3, 21, 22], "secur": 3, "seed": 3, "o": [3, 5], "urandom": 3, "generate_transit": [3, 21, 22], "statist": 3, "avail": 3, "about": [3, 7, 21], "generate_z3_condit": [3, 21, 22], "complex": [3, 21], "integ": [3, 18], "level": 3, "higher": 3, "result": [3, 7, 9, 12, 15, 20], "more": [3, 21], "get_generated_stuff": [3, 21, 22], "select": 3, "main": [3, 16, 21, 22], "command": [3, 6], "line": [3, 6, 11, 15], "trigger": 3, "write_fil": [3, 21, 22], "write": [3, 4], "written": [3, 4], "run_parallel_gener": [4, 21, 22], "its": [4, 20, 21], "own": 4, "concurr": [4, 12], "futur": [4, 21], "multipl": 4, "util": [4, 10], "cpu": [4, 12], "core": 4, "increas": 4, "effici": 4, "callabl": 4, "nonetyp": [4, 5], "write_csv": [4, 21, 22], "should": [4, 5, 17, 21], "inner": 4, "row": [4, 12], "non_stop": [5, 16, 17], "logit": [5, 22], "messag": [5, 6, 7, 20], "should_stop": [5, 17, 22], "stop": [5, 17], "outcom": 5, "being": [5, 17], "detail": 5, "due": 5, "failur": 5, "should_stop_if_time_out": [5, 22], "attribut": 5, "transition_processor": 5, "time": [5, 8], "inform": [5, 7, 16], "exitwithmessag": [6, 21, 22], "print": [6, 7], "exit": 6, "program": 6, "befor": 6, "json": [6, 9, 15, 16, 19], "txt": [6, 16], "other": [6, 17], "script": [6, 7, 13], "support": [6, 18], "perform": [6, 17], "well": [6, 20, 21], "formed": [6, 21], "visual": [6, 19], "templat": 7, "reset": 7, "declar": [7, 13, 15, 16, 18], "block": 7, "smart": [7, 10, 21], "contract": [7, 10, 15, 21], "verif": [7, 10, 12, 16, 21], "getfunctionactiondefinit": [7, 22], "funtiondata": 7, "functiondata": 7, "complet": 7, "getfunctionvariabledeclar": [7, 22], "variable_nam": 7, "solver_nam": [7, 13], "ad": [7, 17], "addit": 7, "getmessagewhenvarnotglob": [7, 22], "assignation_str": [7, 13], "doe": [7, 10, 19], "meet": [7, 21], "requir": 7, "fail": 7, "add": [7, 17], "getresetglobalfunct": [7, 22], "deploy_var": 7, "var_nam": [7, 10, 18], "deploy": [7, 18], "getresultcheckpart": [7, 22], "verdict": 7, "simpl": 8, "timer": 8, "measur": [8, 17], "elaps": 8, "nanosecond": 8, "method": [8, 15, 16, 18, 20], "start": [8, 9, 17], "get": [8, 16], "sinc": 8, "wa": 8, "current": [8, 9, 17, 21], "get_ellapsed_tim": [8, 22], "get_tim": [8, 22], "start_tim": [8, 22], "restart": 8, "record": 8, "check_path_satisfi": [9, 22], "find_path": [9, 22], "end": 9, "recurs": 9, "find": 9, "node": [9, 19], "find_transit": [9, 22], "between": 9, "two": [9, 13], "format_transit": [9, 22], "format": [9, 13, 15, 17, 18, 19], "group_transact": [9, 16, 22], "transition_json": 9, "group": [9, 11, 16], "final": [9, 19], "kei": 9, "pattern": [10, 18], "extract": [10, 17], "relat": 10, "append_old_to_vars_and_return_upd": [10, 22], "var": 10, "_old": [10, 17], "suffix": [10, 16, 17], "updat": [10, 12, 16, 17], "follows_pattern": [10, 22], "input_str": 10, "follow": 10, "get_all_old_vari": [10, 22], "search": [10, 21], "pre_condition_not_having_old_var": [10, 22], "prec": [10, 17], "postc": 10, "valid": [10, 15], "pre": [10, 16], "post": 10, "context": 10, "rais": 10, "except": [10, 20], "replace_var_with_old_in_pr": [10, 22], "postc_var": 10, "counterpart": 10, "map": [10, 11, 12, 18], "z3_post_condit": [10, 22], "compat": [10, 13, 17, 18], "csvdataplott": [11, 21, 22], "csv_file_path": 11, "plot": 11, "variou": 11, "candlestick": 11, "2d": 11, "bar": 11, "scatter": 11, "3d": 11, "4d": 11, "plot_candl": [11, 22], "field": [11, 21], "pl_line": 11, "chart": 11, "plot_csv_data_2d": [11, 22], "typep": 11, "plot_csv_data_3d": [11, 22], "time_metr": 11, "ax": 11, "metric": 11, "z": 11, "axi": 11, "plot_csv_data_4d": [11, 22], "color": [11, 19], "fourth": 11, "dimens": 11, "comma_separated_str": [11, 21, 22], "split": [11, 13], "comma": [11, 18], "separ": [11, 13, 16, 18], "obtain": 11, "randomtransitionsexecut": [12, 21, 22], "merge_csv": 12, "number_test_per_cpu": 12, "number_runs_per_each": 12, "10": 12, "300000000000": 12, "flag": [12, 18], "per": 12, "count_all_path_in_fsm": [12, 22], "count": 12, "text": [12, 15], "process_all_txt_fil": [12, 22], "read_csv_data": [12, 22], "read": [12, 15], "function_to_count_num_path": [12, 21, 22], "list_": 12, "csv_data": 12, "index": [12, 21], "structur": [12, 15], "distinguish": 12, "float": 12, "function_to_run": [12, 21, 22], "handl": [13, 15, 16, 18, 20], "safe": 13, "ensur": 13, "safe_variable_assign": [13, 22], "correct": [13, 18], "prepar": 13, "inclus": 13, "prefix": 13, "first": 13, "convert": [15, 16, 18], "deploi": [15, 18], "correspond": [15, 19], "parse_transit": [15, 22], "present": 15, "transitions_to_json": [15, 22], "transitions_txt_path": 15, "json_output_path": 15, "entir": 15, "z3model_path": 16, "z3_model": 16, "txt_path": 16, "dafsm_txt": 16, "json_path": 16, "logtim": 16, "logger": [16, 21, 22], "transact": 16, "inherit": [16, 17], "capabl": [16, 20, 21], "check_independant_sat": [16, 22], "independ": 16, "check_path_sat": [16, 22], "differ": [16, 18, 19], "through": [16, 21], "get_full_json_path": [16, 22], "full": 16, "get_full_txt_path": [16, 22], "get_full_z3model_path": [16, 22], "_form": 16, "get_grouped_transact": [16, 22], "creat": 16, "copi": 16, "get_json_from_fil": [16, 22], "load": 16, "content": 16, "get_transition_processor": [16, 22], "transitionprocessor": [16, 21, 22], "pre_process_fsm": [16, 22], "new": [16, 21], "set_fsm_data": [16, 22], "tr_grind": [16, 22], "after": [16, 17], "update_data": [16, 22], "processor": 16, "consist": 17, "transform": 17, "a_consistency_check": [17, 22], "_postc_a": 17, "otherprec": 17, "aconsistencycheck": 17, "aconsist": 17, "precondit": 17, "postcondit": 17, "add_old_var_from_precs_and_input": [17, 22], "intern": 17, "help": 17, "progress": [17, 21], "get_vars_names_from_input": [17, 22], "input_c": 17, "n_det_check": [17, 22], "curent_transit": 17, "other_transit": 17, "processed_data": 17, "stage": [17, 21], "ndetcheck": 17, "current_transit": 17, "outgoingtransit": 17, "quantifier_closur": [17, 22], "quantifi": 17, "foral": 17, "appli": 17, "logic": 17, "quantif": 17, "respons": 18, "custom": 18, "boolean": 18, "arrai": 18, "It": 18, "syntax": 18, "checker": [18, 20], "convert_assignements_to_z3_assign": [18, 22], "statement": 18, "declarations_str": 18, "symbol": 18, "convert_to_z3_declar": [18, 22], "deploy_init_var_v": 18, "semicolon": 18, "convers": 18, "purpos": 18, "draw_fsm_graph": [19, 21, 22], "draw": 19, "matplotlib": 19, "nx": 19, "digraph": 19, "drawn": 19, "anyth": 19, "normal": 19, "label": 19, "generate_fsm_graph": [19, 21, 22], "fsmtextjson": 19, "networkx": 19, "edg": 19, "form": 20, "success": 20, "analys": [20, 22], "predefin": 20, "execute_model": [20, 22], "captur": 20, "error": 20, "project": 21, "note": 21, "signific": 21, "stride": 21, "coordin": 21, "multiparti": 21, "distribut": 21, "system": 21, "tailor": 21, "enhanc": 21, "analysi": 21, "protocol": 21, "akin": 21, "blockchain": 21, "By": 21, "integr": 21, "versatil": 21, "advanc": 21, "featur": 21, "like": 21, "guard": 21, "binder": 21, "benchmark": 21, "articul": 21, "scenario": 21, "dynam": 21, "potenti": 21, "unbound": 21, "underscor": 21, "our": 21, "commit": 21, "address": 21, "intric": 21, "challeng": 21, "inher": 21, "introduct": 21, "criterion": 21, "mark": 21, "pivot": 21, "toward": 21, "elimin": 21, "could": 21, "ambigu": 21, "misinterpret": 21, "therebi": 21, "reinforc": 21, "semant": 21, "design": 21, "howev": 21, "pioneer": 21, "softwar": 21, "tool": 21, "nascent": 21, "releas": 21, "lai": 21, "groundwork": 21, "sophist": 21, "also": 21, "highlight": 21, "optim": 21, "phase": 21, "improv": 21, "feedback": 21, "applic": 21, "crucial": 21, "refin": 21, "broaden": 21, "user": 21, "advis": 21, "approach": 21, "understand": 21, "development": 21, "statu": 21, "while": 21, "open": 21, "avenu": 21, "particularli": 21, "those": 21, "essenti": 21, "recogn": 21, "undiscov": 21, "bug": 21, "unoptim": 21, "aspect": 21, "As": 21, "exercis": 21, "caution": 21, "especi": 21, "when": 21, "critic": 21, "grade": 21, "we": 21, "warmli": 21, "invit": 21, "commun": 21, "engag": 21, "contribut": 21, "develop": 21, "your": 21, "insight": 21, "experi": 21, "invalu": 21, "endeavor": 21, "evolv": 21, "robust": 21, "divers": 21, "need": 21, "research": 21, "continu": 21, "excit": 21, "possibl": 21, "herald": 21, "look": 21, "forward": 21, "collabor": 21, "explor": 21, "push": 21, "boundari": 21, "what": 21, "achiev": 21, "extens": [21, 22], "modul": [21, 22], "fsmgraph": [21, 22], "fbuilder": [21, 22], "generate_exampl": [21, 22], "helper": [21, 22], "messagestempl": [21, 22], "pathgener": [21, 22], "patterncheck": [21, 22], "plot_data": [21, 22], "random_exec": [21, 22], "safevariableassign": [21, 22], "the_valid": [21, 22], "variabledeclarationconvert": [21, 22], "visual_graph": [21, 22], "z3runner": [21, 22], "page": 21, "trac": 22}, "objects": {"": [[0, 0, 0, "-", "Extension"], [1, 0, 0, "-", "FSMGraph"], [2, 0, 0, "-", "Fbuilder"], [3, 0, 0, "-", "Generate_examples"], [4, 0, 0, "-", "Helpers"], [5, 0, 0, "-", "Logger"], [6, 0, 0, "-", "Main"], [7, 0, 0, "-", "MessagesTemplates"], [8, 0, 0, "-", "MiniTimer"], [9, 0, 0, "-", "PathGenerator"], [10, 0, 0, "-", "PatternChecker"], [11, 0, 0, "-", "Plot_data"], [12, 0, 0, "-", "Random_exec"], [13, 0, 0, "-", "SafeVariableAssignment"], [14, 0, 0, "-", "Settings"], [15, 0, 0, "-", "The_Validator"], [16, 0, 0, "-", "TransactionsGrinder"], [17, 0, 0, "-", "TransitionProcessor"], [18, 0, 0, "-", "VariableDeclarationConverter"], [19, 0, 0, "-", "Visual_graph"], [20, 0, 0, "-", "Z3Runner"]], "Extension": [[0, 1, 1, "", "exist_in_set"], [0, 1, 1, "", "forall_in_set"], [0, 1, 1, "", "generateFuntionsFormulas"], [0, 1, 1, "", "is_in_set"], [0, 1, 1, "", "replace_assertion"]], "FSMGraph": [[1, 2, 1, "", "FSMGraph"]], "FSMGraph.FSMGraph": [[1, 3, 1, "", "caller_check"], [1, 3, 1, "", "get_number_of_paths"], [1, 3, 1, "", "get_outgoing_transitions"], [1, 3, 1, "", "is_in_a_path"], [1, 3, 1, "", "is_in_all_paths"], [1, 3, 1, "", "printPathTrace"], [1, 2, 1, "", "product"]], "Fbuilder": [[2, 2, 1, "", "Fbuilder"]], "Fbuilder.Fbuilder": [[2, 3, 1, "", "build_z3_formulas_model_and_save"], [2, 3, 1, "", "save_infile"]], "Generate_examples": [[3, 2, 1, "", "RandomTransitionsGenerator"], [3, 1, 1, "", "genFile"], [3, 1, 1, "", "generate_a_transition"], [3, 1, 1, "", "generate_actions"], [3, 1, 1, "", "generate_parameters"], [3, 1, 1, "", "generate_random_type_variables"], [3, 1, 1, "", "generate_secure_seed"], [3, 1, 1, "", "generate_transitions"], [3, 1, 1, "", "generate_z3_condition"], [3, 1, 1, "", "get_generated_stuffs"], [3, 1, 1, "", "main"], [3, 1, 1, "", "write_file"]], "Generate_examples.RandomTransitionsGenerator": [[3, 3, 1, "", "appendToWork"], [3, 3, 1, "", "merge_and_delete"], [3, 3, 1, "", "run"], [3, 3, 1, "", "run2"]], "Helpers": [[4, 1, 1, "", "run_parallel_generations"], [4, 1, 1, "", "write_csv"]], "Logger": [[5, 2, 1, "", "Logger"]], "Logger.Logger": [[5, 3, 1, "", "logIt"], [5, 3, 1, "", "should_stop"], [5, 3, 1, "", "should_stop_if_time_out"]], "Main": [[6, 1, 1, "", "exitWithMessage"], [6, 1, 1, "", "main"]], "MessagesTemplates": [[7, 2, 1, "", "MessagesTemplates"]], "MessagesTemplates.MessagesTemplates": [[7, 3, 1, "", "getFunctionActionDefinition"], [7, 3, 1, "", "getFunctionVariableDeclaration"], [7, 3, 1, "", "getMessageWhenVarNotGlobal"], [7, 3, 1, "", "getResetGlobalFunction"], [7, 3, 1, "", "getResultCheckPart"]], "MiniTimer": [[8, 2, 1, "", "MiniTimer"]], "MiniTimer.MiniTimer": [[8, 3, 1, "", "get_ellapsed_time"], [8, 3, 1, "", "get_time"], [8, 3, 1, "", "start_time"]], "PathGenerator": [[9, 2, 1, "", "PathGenerator"]], "PathGenerator.PathGenerator": [[9, 3, 1, "", "check_path_satisfiability"], [9, 3, 1, "", "find_paths"], [9, 3, 1, "", "find_transition"], [9, 3, 1, "", "format_transition"], [9, 3, 1, "", "group_transactions"]], "PatternChecker": [[10, 2, 1, "", "PatternChecker"]], "PatternChecker.PatternChecker": [[10, 3, 1, "", "append_old_to_vars_and_return_updated"], [10, 3, 1, "", "follows_pattern"], [10, 3, 1, "", "get_all_old_variables"], [10, 3, 1, "", "pre_condition_not_having_old_vars"], [10, 3, 1, "", "replace_var_with_old_in_pre"], [10, 3, 1, "", "z3_post_condition"]], "Plot_data": [[11, 2, 1, "", "CSVDataPlotter"], [11, 1, 1, "", "comma_separated_strings"]], "Plot_data.CSVDataPlotter": [[11, 3, 1, "", "plot_candle"], [11, 3, 1, "", "plot_csv_data_2d"], [11, 3, 1, "", "plot_csv_data_3d"], [11, 3, 1, "", "plot_csv_data_4d"]], "Random_exec": [[12, 2, 1, "", "RandomTransitionsExecuter"], [12, 1, 1, "", "function_to_count_num_path"], [12, 1, 1, "", "function_to_run"]], "Random_exec.RandomTransitionsExecuter": [[12, 3, 1, "", "count_all_path_in_fsm"], [12, 3, 1, "", "merge_and_delete"], [12, 3, 1, "", "process_all_txt_files"], [12, 3, 1, "", "read_csv_data"]], "SafeVariableAssignment": [[13, 2, 1, "", "SafeVariableAssignment"]], "SafeVariableAssignment.SafeVariableAssignment": [[13, 3, 1, "", "safe_variable_assignment"]], "The_Validator": [[15, 2, 1, "", "The_Validator"]], "The_Validator.The_Validator": [[15, 3, 1, "", "parse_transition"], [15, 3, 1, "", "transitions_to_json"]], "TransactionsGrinder": [[16, 2, 1, "", "TransactionsGrinder"]], "TransactionsGrinder.TransactionsGrinder": [[16, 3, 1, "", "check_independant_sat"], [16, 3, 1, "", "check_path_sat"], [16, 3, 1, "", "get_full_json_path"], [16, 3, 1, "", "get_full_txt_path"], [16, 3, 1, "", "get_full_z3model_path"], [16, 3, 1, "", "get_grouped_transaction"], [16, 3, 1, "", "get_json_from_file"], [16, 3, 1, "", "get_transition_processor"], [16, 3, 1, "", "group_transactions"], [16, 3, 1, "", "pre_process_fsm"], [16, 3, 1, "", "set_fsm_data"], [16, 3, 1, "", "tr_grinding"], [16, 3, 1, "", "update_data"]], "TransitionProcessor": [[17, 2, 1, "", "TransitionProcessor"]], "TransitionProcessor.TransitionProcessor": [[17, 3, 1, "", "a_consistency_check"], [17, 3, 1, "", "add_old_var_from_precs_and_inputs"], [17, 3, 1, "", "append"], [17, 3, 1, "", "get_vars_names_from_input"], [17, 3, 1, "", "n_det_check"], [17, 3, 1, "", "process"], [17, 3, 1, "", "quantifier_closure"], [17, 3, 1, "", "should_stop"]], "VariableDeclarationConverter": [[18, 2, 1, "", "VariableDeclarationConverter"]], "VariableDeclarationConverter.VariableDeclarationConverter": [[18, 3, 1, "", "convert_assignements_to_z3_assignment"], [18, 3, 1, "", "convert_to_z3_declarations"]], "Visual_graph": [[19, 1, 1, "", "draw_fsm_graph"], [19, 1, 1, "", "generate_fsm_graph"]], "Z3Runner": [[20, 2, 1, "", "Z3Runner"]], "Z3Runner.Z3Runner": [[20, 3, 1, "", "analyser"], [20, 3, 1, "", "execute_model"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"extens": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "fsmgraph": 1, "fbuilder": 2, "generate_exampl": 3, "helper": 4, "logger": 5, "main": 6, "messagestempl": 7, "minitim": 8, "pathgener": 9, "patterncheck": 10, "plot_data": 11, "random_exec": 12, "safevariableassign": 13, "set": 14, "the_valid": 15, "transactionsgrind": 16, "transitionprocessor": 17, "variabledeclarationconvert": 18, "visual_graph": 19, "z3runner": 20, "welcom": 21, "trac": 21, "document": 21, "": 21, "content": 21, "indic": 21, "tabl": 21}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Extension module": [[0, "module-Extension"]], "FSMGraph module": [[1, "module-FSMGraph"]], "Fbuilder module": [[2, "module-Fbuilder"]], "Generate_examples module": [[3, "module-Generate_examples"]], "Helpers module": [[4, "module-Helpers"]], "Logger module": [[5, "module-Logger"]], "Main module": [[6, "module-Main"]], "MessagesTemplates module": [[7, "module-MessagesTemplates"]], "MiniTimer module": [[8, "module-MiniTimer"]], "PathGenerator module": [[9, "module-PathGenerator"]], "PatternChecker module": [[10, "module-PatternChecker"]], "Plot_data module": [[11, "module-Plot_data"]], "Random_exec module": [[12, "module-Random_exec"]], "SafeVariableAssignment module": [[13, "module-SafeVariableAssignment"]], "Settings module": [[14, "module-Settings"]], "The_Validator module": [[15, "module-The_Validator"]], "TransactionsGrinder module": [[16, "module-TransactionsGrinder"]], "TransitionProcessor module": [[17, "module-TransitionProcessor"]], "VariableDeclarationConverter module": [[18, "module-VariableDeclarationConverter"]], "Visual_graph module": [[19, "module-Visual_graph"]], "Z3Runner module": [[20, "module-Z3Runner"]], "Welcome to TRAC Documentation\u2019s documentation!": [[21, "welcome-to-trac-documentation-s-documentation"]], "Contents:": [[21, null]], "Indices and tables": [[21, "indices-and-tables"]]}, "indexentries": {"extension": [[0, "module-Extension"]], "exist_in_set() (in module extension)": [[0, "Extension.exist_in_set"]], "forall_in_set() (in module extension)": [[0, "Extension.forall_in_set"]], "generatefuntionsformulas() (in module extension)": [[0, "Extension.generateFuntionsFormulas"]], "is_in_set() (in module extension)": [[0, "Extension.is_in_set"]], "module": [[0, "module-Extension"], [1, "module-FSMGraph"], [2, "module-Fbuilder"], [3, "module-Generate_examples"], [4, "module-Helpers"], [5, "module-Logger"], [6, "module-Main"], [7, "module-MessagesTemplates"], [8, "module-MiniTimer"], [9, "module-PathGenerator"], [10, "module-PatternChecker"], [11, "module-Plot_data"], [12, "module-Random_exec"], [13, "module-SafeVariableAssignment"], [14, "module-Settings"], [15, "module-The_Validator"], [16, "module-TransactionsGrinder"], [17, "module-TransitionProcessor"], [18, "module-VariableDeclarationConverter"], [19, "module-Visual_graph"], [20, "module-Z3Runner"]], "replace_assertion() (in module extension)": [[0, "Extension.replace_assertion"]], "fsmgraph": [[1, "module-FSMGraph"]], "fsmgraph (class in fsmgraph)": [[1, "FSMGraph.FSMGraph"]], "fsmgraph.product (class in fsmgraph)": [[1, "FSMGraph.FSMGraph.product"]], "caller_check() (fsmgraph.fsmgraph method)": [[1, "FSMGraph.FSMGraph.caller_check"]], "get_number_of_paths() (fsmgraph.fsmgraph method)": [[1, "FSMGraph.FSMGraph.get_number_of_paths"]], "get_outgoing_transitions() (fsmgraph.fsmgraph method)": [[1, "FSMGraph.FSMGraph.get_outgoing_transitions"]], "is_in_a_path() (fsmgraph.fsmgraph method)": [[1, "FSMGraph.FSMGraph.is_in_a_path"]], "is_in_all_paths() (fsmgraph.fsmgraph method)": [[1, "FSMGraph.FSMGraph.is_in_all_paths"]], "printpathtrace() (fsmgraph.fsmgraph method)": [[1, "FSMGraph.FSMGraph.printPathTrace"]], "fbuilder": [[2, "module-Fbuilder"]], "fbuilder (class in fbuilder)": [[2, "Fbuilder.Fbuilder"]], "build_z3_formulas_model_and_save() (fbuilder.fbuilder static method)": [[2, "Fbuilder.Fbuilder.build_z3_formulas_model_and_save"]], "save_infile() (fbuilder.fbuilder static method)": [[2, "Fbuilder.Fbuilder.save_infile"]], "generate_examples": [[3, "module-Generate_examples"]], "randomtransitionsgenerator (class in generate_examples)": [[3, "Generate_examples.RandomTransitionsGenerator"]], "appendtowork() (generate_examples.randomtransitionsgenerator method)": [[3, "Generate_examples.RandomTransitionsGenerator.appendToWork"]], "genfile() (in module generate_examples)": [[3, "Generate_examples.genFile"]], "generate_a_transition() (in module generate_examples)": [[3, "Generate_examples.generate_a_transition"]], "generate_actions() (in module generate_examples)": [[3, "Generate_examples.generate_actions"]], "generate_parameters() (in module generate_examples)": [[3, "Generate_examples.generate_parameters"]], "generate_random_type_variables() (in module generate_examples)": [[3, "Generate_examples.generate_random_type_variables"]], "generate_secure_seed() (in module generate_examples)": [[3, "Generate_examples.generate_secure_seed"]], "generate_transitions() (in module generate_examples)": [[3, "Generate_examples.generate_transitions"]], "generate_z3_condition() (in module generate_examples)": [[3, "Generate_examples.generate_z3_condition"]], "get_generated_stuffs() (in module generate_examples)": [[3, "Generate_examples.get_generated_stuffs"]], "main() (in module generate_examples)": [[3, "Generate_examples.main"]], "merge_and_delete() (generate_examples.randomtransitionsgenerator method)": [[3, "Generate_examples.RandomTransitionsGenerator.merge_and_delete"]], "run() (generate_examples.randomtransitionsgenerator method)": [[3, "Generate_examples.RandomTransitionsGenerator.run"]], "run2() (generate_examples.randomtransitionsgenerator method)": [[3, "Generate_examples.RandomTransitionsGenerator.run2"]], "write_file() (in module generate_examples)": [[3, "Generate_examples.write_file"]], "helpers": [[4, "module-Helpers"]], "run_parallel_generations() (in module helpers)": [[4, "Helpers.run_parallel_generations"]], "write_csv() (in module helpers)": [[4, "Helpers.write_csv"]], "logger": [[5, "module-Logger"]], "logger (class in logger)": [[5, "Logger.Logger"]], "logit() (logger.logger method)": [[5, "Logger.Logger.logIt"]], "should_stop() (logger.logger method)": [[5, "Logger.Logger.should_stop"]], "should_stop_if_time_out() (logger.logger method)": [[5, "Logger.Logger.should_stop_if_time_out"]], "main": [[6, "module-Main"]], "exitwithmessage() (in module main)": [[6, "Main.exitWithMessage"]], "main() (in module main)": [[6, "Main.main"]], "messagestemplates": [[7, "module-MessagesTemplates"]], "messagestemplates (class in messagestemplates)": [[7, "MessagesTemplates.MessagesTemplates"]], "getfunctionactiondefinition() (messagestemplates.messagestemplates static method)": [[7, "MessagesTemplates.MessagesTemplates.getFunctionActionDefinition"]], "getfunctionvariabledeclaration() (messagestemplates.messagestemplates static method)": [[7, "MessagesTemplates.MessagesTemplates.getFunctionVariableDeclaration"]], "getmessagewhenvarnotglobal() (messagestemplates.messagestemplates static method)": [[7, "MessagesTemplates.MessagesTemplates.getMessageWhenVarNotGlobal"]], "getresetglobalfunction() (messagestemplates.messagestemplates static method)": [[7, "MessagesTemplates.MessagesTemplates.getResetGlobalFunction"]], "getresultcheckpart() (messagestemplates.messagestemplates static method)": [[7, "MessagesTemplates.MessagesTemplates.getResultCheckPart"]], "minitimer": [[8, "module-MiniTimer"]], "minitimer (class in minitimer)": [[8, "MiniTimer.MiniTimer"]], "get_ellapsed_time() (minitimer.minitimer method)": [[8, "MiniTimer.MiniTimer.get_ellapsed_time"]], "get_time() (minitimer.minitimer method)": [[8, "MiniTimer.MiniTimer.get_time"]], "start_time() (minitimer.minitimer method)": [[8, "MiniTimer.MiniTimer.start_time"]], "pathgenerator": [[9, "module-PathGenerator"]], "pathgenerator (class in pathgenerator)": [[9, "PathGenerator.PathGenerator"]], "check_path_satisfiability() (pathgenerator.pathgenerator static method)": [[9, "PathGenerator.PathGenerator.check_path_satisfiability"]], "find_paths() (pathgenerator.pathgenerator static method)": [[9, "PathGenerator.PathGenerator.find_paths"]], "find_transition() (pathgenerator.pathgenerator static method)": [[9, "PathGenerator.PathGenerator.find_transition"]], "format_transition() (pathgenerator.pathgenerator static method)": [[9, "PathGenerator.PathGenerator.format_transition"]], "group_transactions() (pathgenerator.pathgenerator static method)": [[9, "PathGenerator.PathGenerator.group_transactions"]], "patternchecker": [[10, "module-PatternChecker"]], "patternchecker (class in patternchecker)": [[10, "PatternChecker.PatternChecker"]], "append_old_to_vars_and_return_updated() (patternchecker.patternchecker static method)": [[10, "PatternChecker.PatternChecker.append_old_to_vars_and_return_updated"]], "follows_pattern() (patternchecker.patternchecker static method)": [[10, "PatternChecker.PatternChecker.follows_pattern"]], "get_all_old_variables() (patternchecker.patternchecker static method)": [[10, "PatternChecker.PatternChecker.get_all_old_variables"]], "pre_condition_not_having_old_vars() (patternchecker.patternchecker static method)": [[10, "PatternChecker.PatternChecker.pre_condition_not_having_old_vars"]], "replace_var_with_old_in_pre() (patternchecker.patternchecker static method)": [[10, "PatternChecker.PatternChecker.replace_var_with_old_in_pre"]], "z3_post_condition() (patternchecker.patternchecker static method)": [[10, "PatternChecker.PatternChecker.z3_post_condition"]], "csvdataplotter (class in plot_data)": [[11, "Plot_data.CSVDataPlotter"]], "plot_data": [[11, "module-Plot_data"]], "comma_separated_strings() (in module plot_data)": [[11, "Plot_data.comma_separated_strings"]], "plot_candle() (plot_data.csvdataplotter method)": [[11, "Plot_data.CSVDataPlotter.plot_candle"]], "plot_csv_data_2d() (plot_data.csvdataplotter method)": [[11, "Plot_data.CSVDataPlotter.plot_csv_data_2d"]], "plot_csv_data_3d() (plot_data.csvdataplotter method)": [[11, "Plot_data.CSVDataPlotter.plot_csv_data_3d"]], "plot_csv_data_4d() (plot_data.csvdataplotter method)": [[11, "Plot_data.CSVDataPlotter.plot_csv_data_4d"]], "randomtransitionsexecuter (class in random_exec)": [[12, "Random_exec.RandomTransitionsExecuter"]], "random_exec": [[12, "module-Random_exec"]], "count_all_path_in_fsm() (random_exec.randomtransitionsexecuter method)": [[12, "Random_exec.RandomTransitionsExecuter.count_all_path_in_fsm"]], "function_to_count_num_path() (in module random_exec)": [[12, "Random_exec.function_to_count_num_path"]], "function_to_run() (in module random_exec)": [[12, "Random_exec.function_to_run"]], "merge_and_delete() (random_exec.randomtransitionsexecuter method)": [[12, "Random_exec.RandomTransitionsExecuter.merge_and_delete"]], "process_all_txt_files() (random_exec.randomtransitionsexecuter method)": [[12, "Random_exec.RandomTransitionsExecuter.process_all_txt_files"]], "read_csv_data() (random_exec.randomtransitionsexecuter method)": [[12, "Random_exec.RandomTransitionsExecuter.read_csv_data"]], "safevariableassignment": [[13, "module-SafeVariableAssignment"]], "safevariableassignment (class in safevariableassignment)": [[13, "SafeVariableAssignment.SafeVariableAssignment"]], "safe_variable_assignment() (safevariableassignment.safevariableassignment static method)": [[13, "SafeVariableAssignment.SafeVariableAssignment.safe_variable_assignment"]], "settings": [[14, "module-Settings"]], "the_validator": [[15, "module-The_Validator"]], "the_validator (class in the_validator)": [[15, "The_Validator.The_Validator"]], "parse_transition() (the_validator.the_validator method)": [[15, "The_Validator.The_Validator.parse_transition"]], "transitions_to_json() (the_validator.the_validator method)": [[15, "The_Validator.The_Validator.transitions_to_json"]], "transactionsgrinder": [[16, "module-TransactionsGrinder"]], "transactionsgrinder (class in transactionsgrinder)": [[16, "TransactionsGrinder.TransactionsGrinder"]], "check_independant_sat() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.check_independant_sat"]], "check_path_sat() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.check_path_sat"]], "get_full_json_path() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.get_full_json_path"]], "get_full_txt_path() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.get_full_txt_path"]], "get_full_z3model_path() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.get_full_z3model_path"]], "get_grouped_transaction() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.get_grouped_transaction"]], "get_json_from_file() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.get_json_from_file"]], "get_transition_processor() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.get_transition_processor"]], "group_transactions() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.group_transactions"]], "pre_process_fsm() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.pre_process_fsm"]], "set_fsm_data() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.set_fsm_data"]], "tr_grinding() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.tr_grinding"]], "update_data() (transactionsgrinder.transactionsgrinder method)": [[16, "TransactionsGrinder.TransactionsGrinder.update_data"]], "transitionprocessor": [[17, "module-TransitionProcessor"]], "transitionprocessor (class in transitionprocessor)": [[17, "TransitionProcessor.TransitionProcessor"]], "a_consistency_check() (transitionprocessor.transitionprocessor method)": [[17, "TransitionProcessor.TransitionProcessor.a_consistency_check"]], "add_old_var_from_precs_and_inputs() (transitionprocessor.transitionprocessor method)": [[17, "TransitionProcessor.TransitionProcessor.add_old_var_from_precs_and_inputs"]], "append() (transitionprocessor.transitionprocessor method)": [[17, "TransitionProcessor.TransitionProcessor.append"]], "get_vars_names_from_input() (transitionprocessor.transitionprocessor method)": [[17, "TransitionProcessor.TransitionProcessor.get_vars_names_from_input"]], "n_det_check() (transitionprocessor.transitionprocessor method)": [[17, "TransitionProcessor.TransitionProcessor.n_det_check"]], "process() (transitionprocessor.transitionprocessor method)": [[17, "TransitionProcessor.TransitionProcessor.process"]], "quantifier_closure() (transitionprocessor.transitionprocessor method)": [[17, "TransitionProcessor.TransitionProcessor.quantifier_closure"]], "should_stop() (transitionprocessor.transitionprocessor method)": [[17, "TransitionProcessor.TransitionProcessor.should_stop"]], "variabledeclarationconverter": [[18, "module-VariableDeclarationConverter"]], "variabledeclarationconverter (class in variabledeclarationconverter)": [[18, "VariableDeclarationConverter.VariableDeclarationConverter"]], "convert_assignements_to_z3_assignment() (variabledeclarationconverter.variabledeclarationconverter method)": [[18, "VariableDeclarationConverter.VariableDeclarationConverter.convert_assignements_to_z3_assignment"]], "convert_to_z3_declarations() (variabledeclarationconverter.variabledeclarationconverter static method)": [[18, "VariableDeclarationConverter.VariableDeclarationConverter.convert_to_z3_declarations"]], "visual_graph": [[19, "module-Visual_graph"]], "draw_fsm_graph() (in module visual_graph)": [[19, "Visual_graph.draw_fsm_graph"]], "generate_fsm_graph() (in module visual_graph)": [[19, "Visual_graph.generate_fsm_graph"]], "z3runner": [[20, "module-Z3Runner"]], "z3runner (class in z3runner)": [[20, "Z3Runner.Z3Runner"]], "analyser() (z3runner.z3runner static method)": [[20, "Z3Runner.Z3Runner.analyser"]], "execute_model() (z3runner.z3runner static method)": [[20, "Z3Runner.Z3Runner.execute_model"]]}})